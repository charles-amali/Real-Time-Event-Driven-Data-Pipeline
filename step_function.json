{
    "Comment": "E-commerce Pipeline: Validation -> Transformation",
    "StartAt": "RunValidationTask",
    "States": {
      "RunValidationTask": {
        "Type": "Task",
        "Resource": "arn:aws:states:::ecs:runTask.sync",
        "Parameters": {
          "LaunchType": "FARGATE",
          "Cluster": "arn:aws:ecs:us-east-1:724772083049:cluster/ecommerce-cluster",
          "TaskDefinition": "arn:aws:ecs:us-east-1:724772083049:task-definition/ecommerce-validator-task:2",
          "NetworkConfiguration": {
            "AwsvpcConfiguration": {
              "Subnets": ["subnet-0c494c05c532d0815"],
              
              "SecurityGroups":  ["sg-0728f1ed94f2b7ed7"],
              "AssignPublicIp": "ENABLED"
            }
          }
        },
        "Next": "RunTransformationTask",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "MoveToInvalidData"
          }
        ],
        "Retry": [
          {
            "ErrorEquals": [
              "ECS.ServiceError",
              "States.TaskFailed"
            ],
            "MaxAttempts": 3,
            "IntervalSeconds": 1,
            "BackoffRate": 2.0,
            "JitterStrategy": "FULL"
          }
        ]
      },
      "MoveToInvalidData": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "archive_files",
          "Payload": {
            "bucket": "ecommerce-shp",
            "source_prefix": "processed/",
            "destination_prefix": "archive/invalid-data/"
          }
        },
        "Next": "CheckMoveToInvalidDataResult",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "ResultPath": "$.MoveToInvalidDataError",
            "Next": "NotifyFailure"
          }
        ],
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "MaxAttempts": 3,
            "IntervalSeconds": 1,
            "BackoffRate": 2.0,
            "JitterStrategy": "FULL"
          }
        ]
      },
      "CheckMoveToInvalidDataResult": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.Payload.statusCode",
            "NumericEquals": 200,
            "Next": "NotifyInvalidDataMoved"
          }
        ],
        "Default": "NotifyFailure"
      },
      "NotifyInvalidDataMoved": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sns:publish",
        "Parameters": {
          "TopicArn": "arn:aws:sns:us-east-1:724772083049:ecs_pipeline",
          "Message.$": "States.Format('E-commerce Pipeline failed at validation. Data moved to archive/invalid-data/: {}', $.Payload.body)"
        },
        "Next": "Fail"
      },
      "RunTransformationTask": {
        "Type": "Task",
        "Resource": "arn:aws:states:::ecs:runTask.sync",
        "Parameters": {
          "LaunchType": "FARGATE",
          "Cluster": "arn:aws:ecs:us-east-1:724772083049:cluster/ecommerce-cluster",
          "TaskDefinition": "arn:aws:ecs:us-east-1:724772083049:task-definition/ecommerce-transformer-task:1",
          "NetworkConfiguration": {
            "AwsvpcConfiguration": {
              "Subnets": ["subnet-0c494c05c532d0815"],
              "SecurityGroups": ["sg-0728f1ed94f2b7ed7"],
              "AssignPublicIp": "ENABLED"
            }
          }
        },
        "Next": "ArchiveProcessedData",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "NotifyFailure"
          }
        ],
        "Retry": [
          {
            "ErrorEquals": [
              "ECS.ServiceError",
              "States.TaskFailed"
            ],
            "MaxAttempts": 3,
            "IntervalSeconds": 1,
            "BackoffRate": 2.0,
            "JitterStrategy": "FULL"
          }
        ]
      },
      "ArchiveProcessedData": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "archive_files",
          "Payload": {
            "bucket": "ecommerce-shp",
            "source_prefix": "processed/",
            "destination_prefix": "archive/processed-data/"
          }
        },
        "Next": "NotifySuccess",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "NotifyFailure"
          }
        ],
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "MaxAttempts": 3,
            "IntervalSeconds": 1,
            "BackoffRate": 2.0,
            "JitterStrategy": "FULL"
          }
        ]
      },
      "NotifySuccess": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sns:publish",
        "Parameters": {
          "TopicArn": "arn:aws:sns:us-east-1:724772083049:ecs_pipeline",
          "Message": "E-commerce Category-Level KPIs and Order-Level KPIs computed and saved to DynamoDB successfully"
        },
        "Next": "Success"
      },
      "NotifyFailure": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sns:publish",
        "Parameters": {
          "TopicArn": "arn:aws:sns:us-east-1:724772083049:ecs_pipeline",
          "Message.$": "States.Format('E-commerce Pipeline failed at state {} with error: {}. Data moved to archive (Invalid)', $.State, $.Cause)"
        },
        "Next": "Fail"
      },
      "Success": {
        "Type": "Succeed"
      },
      "Fail": {
        "Type": "Fail"
      }
    }
  }

